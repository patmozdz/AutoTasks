Add Azure CLI to path
Log into Azure CLI

version: '3'

services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  celery:
    build: .
    command: celery -A AutoTasks_backend worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

# Steps to run simulation:
# One terminal:
celery -A AutoTasks_backend worker --loglevel=info

# Second terminal:
celery -A AutoTasks_backend beat

# Run chat/chat_test.py


# To clear redis queue:
redis-cli
KEYS *
DEL queue_name


# Steps to run using docker-compose:
docker-compose up

# (In new terminal) Execute chat/chat_test.py from within the 'web' container.
docker-compose exec web python chat/chat_test.py

# To view the ngrok status interface, navigate to a browser on the host machine and enter:
http://localhost:4040

# To end:
docker-compose down

# If you want to run in background, use: docker-compose up -d. If this is done, use docker-compose logs -f [service_name] in a terminal.
# For example, docker-compose logs -f web


# Steps to restart container completely:
docker-compose down
docker volume rm autotasks_backend_postgres_data
docker-compose up --build
